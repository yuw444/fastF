==484== Memcheck, a memory error detector
==484== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==484== Using Valgrind-3.16.1-36d6727e1d-20200622X and LibVEX; rerun with -h for copyright info
==484== Command: ./fastF filter -R ../data/test_R1.fastq.gz -r ../data/test_R2.fastq.gz -o ../data/test -w ../data/whitelist.txt
==484== Parent PID: 27750
==484== 
--484-- 
--484-- Valgrind options:
--484--    --trace-children=yes
--484--    --show-leak-kinds=all
--484--    --leak-check=full
--484--    -v
--484--    --track-origins=yes
--484--    --dsymutil=yes
--484--    --log-file=vg_logfile_%p.out
--484-- Contents of /proc/version:
--484--   Linux version 3.10.0-1127.el7.x86_64 (mockbuild@kbuilder.bsys.centos.org) (gcc version 4.8.5 20150623 (Red Hat 4.8.5-39) (GCC) ) #1 SMP Tue Mar 31 23:36:51 UTC 2020
--484-- 
--484-- Arch and hwcaps: AMD64, LittleEndian, amd64-cx16-lzcnt-rdtscp-sse3-ssse3-avx-avx2-bmi-f16c-rdrand
--484-- Page sizes: currently 4096, max supported 4096
--484-- Valgrind library directory: /hpc/apps/valgrind/3.16.1/lib/valgrind
--484-- Reading syms from /scratch/u/yu89975/fastF/build/fastF
--484-- Reading syms from /usr/lib64/ld-2.17.so
--484-- Reading syms from /hpc/apps/valgrind/3.16.1/lib/valgrind/memcheck-amd64-linux
--484--    object doesn't have a dynamic symbol table
--484-- Scheduler: using generic scheduler lock implementation.
--484-- Reading suppressions file: /hpc/apps/valgrind/3.16.1/lib/valgrind/default.supp
==484== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-484-by-yu89975-on-ln01
==484== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-484-by-yu89975-on-ln01
==484== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-484-by-yu89975-on-ln01
==484== 
==484== TO CONTROL THIS PROCESS USING vgdb (which you probably
==484== don't want to do, unless you know exactly what you're doing,
==484== or are doing some strange experiment):
==484==   /hpc/apps/valgrind/3.16.1/lib/valgrind/../../bin/vgdb --pid=484 ...command...
==484== 
==484== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==484==   /path/to/gdb ./fastF
==484== and then give GDB the following command
==484==   target remote | /hpc/apps/valgrind/3.16.1/lib/valgrind/../../bin/vgdb --pid=484
==484== --pid is optional if only one valgrind process is running
==484== 
--484-- REDIR: 0x4019e30 (ld-linux-x86-64.so.2:strlen) redirected to 0x580cb245 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--484-- REDIR: 0x4019c00 (ld-linux-x86-64.so.2:index) redirected to 0x580cb25f (vgPlain_amd64_linux_REDIR_FOR_index)
--484-- Reading syms from /hpc/apps/valgrind/3.16.1/lib/valgrind/vgpreload_core-amd64-linux.so
--484-- Reading syms from /hpc/apps/valgrind/3.16.1/lib/valgrind/vgpreload_memcheck-amd64-linux.so
==484== WARNING: new redirection conflicts with existing -- ignoring it
--484--     old: 0x04019e30 (strlen              ) R-> (0000.0) 0x580cb245 vgPlain_amd64_linux_REDIR_FOR_strlen
--484--     new: 0x04019e30 (strlen              ) R-> (2007.0) 0x04c2d1b0 strlen
--484-- REDIR: 0x4019db0 (ld-linux-x86-64.so.2:strcmp) redirected to 0x4c2e300 (strcmp)
--484-- REDIR: 0x401aa70 (ld-linux-x86-64.so.2:mempcpy) redirected to 0x4c31f90 (mempcpy)
--484-- Reading syms from /usr/lib64/libz.so.1.2.7
--484--    object doesn't have a symbol table
--484-- Reading syms from /usr/lib64/libpthread-2.17.so
--484-- Reading syms from /usr/lib64/libc-2.17.so
--484-- REDIR: 0x52f9130 (libc.so.6:strcasecmp) redirected to 0x4a247a0 (_vgnU_ifunc_wrapper)
--484-- REDIR: 0x52f5eb0 (libc.so.6:strnlen) redirected to 0x4a247a0 (_vgnU_ifunc_wrapper)
--484-- REDIR: 0x52fb400 (libc.so.6:strncasecmp) redirected to 0x4a247a0 (_vgnU_ifunc_wrapper)
--484-- REDIR: 0x52f8910 (libc.so.6:memset) redirected to 0x4a247a0 (_vgnU_ifunc_wrapper)
--484-- REDIR: 0x52f88c0 (libc.so.6:memcpy@GLIBC_2.2.5) redirected to 0x4a247a0 (_vgnU_ifunc_wrapper)
--484-- REDIR: 0x52f5d80 (libc.so.6:strlen) redirected to 0x4a247a0 (_vgnU_ifunc_wrapper)
--484-- REDIR: 0x52f4330 (libc.so.6:strcmp) redirected to 0x4a247a0 (_vgnU_ifunc_wrapper)
--484-- REDIR: 0x52fdad0 (libc.so.6:memcpy@@GLIBC_2.14) redirected to 0x4a247a0 (_vgnU_ifunc_wrapper)
--484-- REDIR: 0x52f8a70 (libc.so.6:mempcpy) redirected to 0x4a247a0 (_vgnU_ifunc_wrapper)
--484-- REDIR: 0x52f57c0 (libc.so.6:strcpy) redirected to 0x4a247a0 (_vgnU_ifunc_wrapper)
--484-- REDIR: 0x52f4070 (libc.so.6:strcat) redirected to 0x4a247a0 (_vgnU_ifunc_wrapper)
--484-- REDIR: 0x52f5dd0 (libc.so.6:__GI_strlen) redirected to 0x4c2d110 (__GI_strlen)
--484-- REDIR: 0x52f78a0 (libc.so.6:__GI_strrchr) redirected to 0x4c2cb70 (__GI_strrchr)
--484-- REDIR: 0x52f8970 (libc.so.6:__GI_memset) redirected to 0x4c30ee0 (memset)
--484-- REDIR: 0x53c2fe0 (libc.so.6:__memmove_ssse3_back) redirected to 0x4c2e460 (memcpy@GLIBC_2.2.5)
--484-- REDIR: 0x53a7d90 (libc.so.6:__strcmp_sse42) redirected to 0x4c2e2b0 (__strcmp_sse42)
--484-- REDIR: 0x52ff3c0 (libc.so.6:strchrnul) redirected to 0x4c31ab0 (strchrnul)
--484-- REDIR: 0x52f8ae0 (libc.so.6:__GI_mempcpy) redirected to 0x4c31cc0 (__GI_mempcpy)
--484-- REDIR: 0x52eead0 (libc.so.6:free) redirected to 0x4c2afe6 (free)
--484-- REDIR: 0x52ee6b0 (libc.so.6:malloc) redirected to 0x4c29eec (malloc)
--484-- REDIR: 0x53d8680 (libc.so.6:__strlen_sse2_pminub) redirected to 0x4c2d0f0 (strlen)
--484-- REDIR: 0x53036e0 (libc.so.6:__strcpy_sse2_unaligned) redirected to 0x4c2d1d0 (strcpy)
--484-- REDIR: 0x530e920 (libc.so.6:__GI_strstr) redirected to 0x4c32220 (__strstr_sse2)
--484-- REDIR: 0x52f7fa0 (libc.so.6:memchr) redirected to 0x4c2e3a0 (memchr)
--484-- REDIR: 0x52fdb40 (libc.so.6:__GI_memcpy) redirected to 0x4c2efb0 (__GI_memcpy)
--484-- REDIR: 0x53bda40 (libc.so.6:__memcpy_ssse3_back) redirected to 0x4c2e7b0 (memcpy@@GLIBC_2.14)
--484-- REDIR: 0x52f7820 (libc.so.6:strncpy) redirected to 0x4a247a0 (_vgnU_ifunc_wrapper)
--484-- REDIR: 0x5303d10 (libc.so.6:__strncpy_sse2_unaligned) redirected to 0x4c2d780 (__strncpy_sse2_unaligned)
==484== Conditional jump or move depends on uninitialised value(s)
==484==    at 0x4E3B54C: deflate (in /usr/lib64/libz.so.1.2.7)
==484==    by 0x4E44DE5: ??? (in /usr/lib64/libz.so.1.2.7)
==484==    by 0x4E455F1: gzclose_w (in /usr/lib64/libz.so.1.2.7)
==484==    by 0x401EC0: cmd_filter (main.c:218)
==484==    by 0x40206B: main (main.c:257)
==484==  Uninitialised value was created by a heap allocation
==484==    at 0x4C29F73: malloc (vg_replace_malloc.c:307)
==484==    by 0x4E43A09: ??? (in /usr/lib64/libz.so.1.2.7)
==484==    by 0x401CCA: cmd_filter (main.c:171)
==484==    by 0x40206B: main (main.c:257)
==484== 
==484== 
==484== HEAP SUMMARY:
==484==     in use at exit: 100,000 bytes in 1,000 blocks
==484==   total heap usage: 25,544 allocs, 24,544 frees, 16,388,856 bytes allocated
==484== 
==484== Searching for pointers to 1,000 not-freed blocks
==484== Checked 117,968 bytes
==484== 
==484== 100,000 bytes in 1,000 blocks are definitely lost in loss record 1 of 1
==484==    at 0x4C29F73: malloc (vg_replace_malloc.c:307)
==484==    by 0x402642: read_txt (fastq_filter.c:184)
==484==    by 0x401DBB: cmd_filter (main.c:194)
==484==    by 0x40206B: main (main.c:257)
==484== 
==484== LEAK SUMMARY:
==484==    definitely lost: 100,000 bytes in 1,000 blocks
==484==    indirectly lost: 0 bytes in 0 blocks
==484==      possibly lost: 0 bytes in 0 blocks
==484==    still reachable: 0 bytes in 0 blocks
==484==         suppressed: 0 bytes in 0 blocks
==484== 
==484== ERROR SUMMARY: 5 errors from 2 contexts (suppressed: 0 from 0)
==484== 
==484== 4 errors in context 1 of 2:
==484== Conditional jump or move depends on uninitialised value(s)
==484==    at 0x4E3B54C: deflate (in /usr/lib64/libz.so.1.2.7)
==484==    by 0x4E44DE5: ??? (in /usr/lib64/libz.so.1.2.7)
==484==    by 0x4E455F1: gzclose_w (in /usr/lib64/libz.so.1.2.7)
==484==    by 0x401EC0: cmd_filter (main.c:218)
==484==    by 0x40206B: main (main.c:257)
==484==  Uninitialised value was created by a heap allocation
==484==    at 0x4C29F73: malloc (vg_replace_malloc.c:307)
==484==    by 0x4E43A09: ??? (in /usr/lib64/libz.so.1.2.7)
==484==    by 0x401CCA: cmd_filter (main.c:171)
==484==    by 0x40206B: main (main.c:257)
==484== 
==484== ERROR SUMMARY: 5 errors from 2 contexts (suppressed: 0 from 0)
