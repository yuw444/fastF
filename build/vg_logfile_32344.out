==32344== Memcheck, a memory error detector
==32344== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==32344== Using Valgrind-3.16.1-36d6727e1d-20200622X and LibVEX; rerun with -h for copyright info
==32344== Command: ./fastF filter -R ../data/test_R1.fastq.gz -r ../data/test_R2.fastq.gz -o ../data/test -w ../data/whitelist.txt
==32344== Parent PID: 27750
==32344== 
--32344-- 
--32344-- Valgrind options:
--32344--    --trace-children=yes
--32344--    --show-leak-kinds=all
--32344--    --leak-check=full
--32344--    -v
--32344--    --track-origins=yes
--32344--    --dsymutil=yes
--32344--    --log-file=vg_logfile_%p.out
--32344-- Contents of /proc/version:
--32344--   Linux version 3.10.0-1127.el7.x86_64 (mockbuild@kbuilder.bsys.centos.org) (gcc version 4.8.5 20150623 (Red Hat 4.8.5-39) (GCC) ) #1 SMP Tue Mar 31 23:36:51 UTC 2020
--32344-- 
--32344-- Arch and hwcaps: AMD64, LittleEndian, amd64-cx16-lzcnt-rdtscp-sse3-ssse3-avx-avx2-bmi-f16c-rdrand
--32344-- Page sizes: currently 4096, max supported 4096
--32344-- Valgrind library directory: /hpc/apps/valgrind/3.16.1/lib/valgrind
--32344-- Reading syms from /scratch/u/yu89975/fastF/build/fastF
--32344-- Reading syms from /usr/lib64/ld-2.17.so
--32344-- Reading syms from /hpc/apps/valgrind/3.16.1/lib/valgrind/memcheck-amd64-linux
--32344--    object doesn't have a dynamic symbol table
--32344-- Scheduler: using generic scheduler lock implementation.
--32344-- Reading suppressions file: /hpc/apps/valgrind/3.16.1/lib/valgrind/default.supp
==32344== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-32344-by-yu89975-on-ln01
==32344== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-32344-by-yu89975-on-ln01
==32344== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-32344-by-yu89975-on-ln01
==32344== 
==32344== TO CONTROL THIS PROCESS USING vgdb (which you probably
==32344== don't want to do, unless you know exactly what you're doing,
==32344== or are doing some strange experiment):
==32344==   /hpc/apps/valgrind/3.16.1/lib/valgrind/../../bin/vgdb --pid=32344 ...command...
==32344== 
==32344== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==32344==   /path/to/gdb ./fastF
==32344== and then give GDB the following command
==32344==   target remote | /hpc/apps/valgrind/3.16.1/lib/valgrind/../../bin/vgdb --pid=32344
==32344== --pid is optional if only one valgrind process is running
==32344== 
--32344-- REDIR: 0x4019e30 (ld-linux-x86-64.so.2:strlen) redirected to 0x580cb245 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--32344-- REDIR: 0x4019c00 (ld-linux-x86-64.so.2:index) redirected to 0x580cb25f (vgPlain_amd64_linux_REDIR_FOR_index)
--32344-- Reading syms from /hpc/apps/valgrind/3.16.1/lib/valgrind/vgpreload_core-amd64-linux.so
--32344-- Reading syms from /hpc/apps/valgrind/3.16.1/lib/valgrind/vgpreload_memcheck-amd64-linux.so
==32344== WARNING: new redirection conflicts with existing -- ignoring it
--32344--     old: 0x04019e30 (strlen              ) R-> (0000.0) 0x580cb245 vgPlain_amd64_linux_REDIR_FOR_strlen
--32344--     new: 0x04019e30 (strlen              ) R-> (2007.0) 0x04c2d1b0 strlen
--32344-- REDIR: 0x4019db0 (ld-linux-x86-64.so.2:strcmp) redirected to 0x4c2e300 (strcmp)
--32344-- REDIR: 0x401aa70 (ld-linux-x86-64.so.2:mempcpy) redirected to 0x4c31f90 (mempcpy)
--32344-- Reading syms from /usr/lib64/libz.so.1.2.7
--32344--    object doesn't have a symbol table
--32344-- Reading syms from /usr/lib64/libpthread-2.17.so
--32344-- Reading syms from /usr/lib64/libc-2.17.so
--32344-- REDIR: 0x52f9130 (libc.so.6:strcasecmp) redirected to 0x4a247a0 (_vgnU_ifunc_wrapper)
--32344-- REDIR: 0x52f5eb0 (libc.so.6:strnlen) redirected to 0x4a247a0 (_vgnU_ifunc_wrapper)
--32344-- REDIR: 0x52fb400 (libc.so.6:strncasecmp) redirected to 0x4a247a0 (_vgnU_ifunc_wrapper)
--32344-- REDIR: 0x52f8910 (libc.so.6:memset) redirected to 0x4a247a0 (_vgnU_ifunc_wrapper)
--32344-- REDIR: 0x52f88c0 (libc.so.6:memcpy@GLIBC_2.2.5) redirected to 0x4a247a0 (_vgnU_ifunc_wrapper)
--32344-- REDIR: 0x52f5d80 (libc.so.6:strlen) redirected to 0x4a247a0 (_vgnU_ifunc_wrapper)
--32344-- REDIR: 0x52f4330 (libc.so.6:strcmp) redirected to 0x4a247a0 (_vgnU_ifunc_wrapper)
--32344-- REDIR: 0x52fdad0 (libc.so.6:memcpy@@GLIBC_2.14) redirected to 0x4a247a0 (_vgnU_ifunc_wrapper)
--32344-- REDIR: 0x52f8a70 (libc.so.6:mempcpy) redirected to 0x4a247a0 (_vgnU_ifunc_wrapper)
--32344-- REDIR: 0x52f57c0 (libc.so.6:strcpy) redirected to 0x4a247a0 (_vgnU_ifunc_wrapper)
--32344-- REDIR: 0x52f4070 (libc.so.6:strcat) redirected to 0x4a247a0 (_vgnU_ifunc_wrapper)
--32344-- REDIR: 0x52f5dd0 (libc.so.6:__GI_strlen) redirected to 0x4c2d110 (__GI_strlen)
--32344-- REDIR: 0x52f78a0 (libc.so.6:__GI_strrchr) redirected to 0x4c2cb70 (__GI_strrchr)
--32344-- REDIR: 0x52f8970 (libc.so.6:__GI_memset) redirected to 0x4c30ee0 (memset)
--32344-- REDIR: 0x53c2fe0 (libc.so.6:__memmove_ssse3_back) redirected to 0x4c2e460 (memcpy@GLIBC_2.2.5)
--32344-- REDIR: 0x53a7d90 (libc.so.6:__strcmp_sse42) redirected to 0x4c2e2b0 (__strcmp_sse42)
--32344-- REDIR: 0x52ff3c0 (libc.so.6:strchrnul) redirected to 0x4c31ab0 (strchrnul)
--32344-- REDIR: 0x52f8ae0 (libc.so.6:__GI_mempcpy) redirected to 0x4c31cc0 (__GI_mempcpy)
--32344-- REDIR: 0x52eead0 (libc.so.6:free) redirected to 0x4c2afe6 (free)
--32344-- REDIR: 0x52ee6b0 (libc.so.6:malloc) redirected to 0x4c29eec (malloc)
--32344-- REDIR: 0x53d8680 (libc.so.6:__strlen_sse2_pminub) redirected to 0x4c2d0f0 (strlen)
--32344-- REDIR: 0x53036e0 (libc.so.6:__strcpy_sse2_unaligned) redirected to 0x4c2d1d0 (strcpy)
==32344== Conditional jump or move depends on uninitialised value(s)
==32344==    at 0x52E7AB4: _IO_str_init_static_internal (in /usr/lib64/libc-2.17.so)
==32344==    by 0x52DA42C: vsprintf (in /usr/lib64/libc-2.17.so)
==32344==    by 0x52BC5D6: sprintf (in /usr/lib64/libc-2.17.so)
==32344==    by 0x401CBD: cmd_filter (main.c:172)
==32344==    by 0x402075: main (main.c:261)
==32344==  Uninitialised value was created by a stack allocation
==32344==    at 0x40170A: cmd_filter (main.c:87)
==32344== 
==32344== Conditional jump or move depends on uninitialised value(s)
==32344==    at 0x52E5FB8: _IO_default_xsputn (in /usr/lib64/libc-2.17.so)
==32344==    by 0x52B6032: vfprintf (in /usr/lib64/libc-2.17.so)
==32344==    by 0x52DA43A: vsprintf (in /usr/lib64/libc-2.17.so)
==32344==    by 0x52BC5D6: sprintf (in /usr/lib64/libc-2.17.so)
==32344==    by 0x401CBD: cmd_filter (main.c:172)
==32344==    by 0x402075: main (main.c:261)
==32344==  Uninitialised value was created by a stack allocation
==32344==    at 0x40170A: cmd_filter (main.c:87)
==32344== 
==32344== Conditional jump or move depends on uninitialised value(s)
==32344==    at 0x52E78F3: _IO_str_overflow (in /usr/lib64/libc-2.17.so)
==32344==    by 0x52E5FA0: _IO_default_xsputn (in /usr/lib64/libc-2.17.so)
==32344==    by 0x52B6032: vfprintf (in /usr/lib64/libc-2.17.so)
==32344==    by 0x52DA43A: vsprintf (in /usr/lib64/libc-2.17.so)
==32344==    by 0x52BC5D6: sprintf (in /usr/lib64/libc-2.17.so)
==32344==    by 0x401CBD: cmd_filter (main.c:172)
==32344==    by 0x402075: main (main.c:261)
==32344==  Uninitialised value was created by a stack allocation
==32344==    at 0x40170A: cmd_filter (main.c:87)
==32344== 
==32344== Use of uninitialised value of size 8
==32344==    at 0x52E79BA: _IO_str_overflow (in /usr/lib64/libc-2.17.so)
==32344==    by 0x52E5FA0: _IO_default_xsputn (in /usr/lib64/libc-2.17.so)
==32344==    by 0x52B6032: vfprintf (in /usr/lib64/libc-2.17.so)
==32344==    by 0x52DA43A: vsprintf (in /usr/lib64/libc-2.17.so)
==32344==    by 0x52BC5D6: sprintf (in /usr/lib64/libc-2.17.so)
==32344==    by 0x401CBD: cmd_filter (main.c:172)
==32344==    by 0x402075: main (main.c:261)
==32344==  Uninitialised value was created by a stack allocation
==32344==    at 0x40170A: cmd_filter (main.c:87)
==32344== 
==32344== Invalid write of size 1
==32344==    at 0x52E79BA: _IO_str_overflow (in /usr/lib64/libc-2.17.so)
==32344==    by 0x52E5FA0: _IO_default_xsputn (in /usr/lib64/libc-2.17.so)
==32344==    by 0x52B6032: vfprintf (in /usr/lib64/libc-2.17.so)
==32344==    by 0x52DA43A: vsprintf (in /usr/lib64/libc-2.17.so)
==32344==    by 0x52BC5D6: sprintf (in /usr/lib64/libc-2.17.so)
==32344==    by 0x401CBD: cmd_filter (main.c:172)
==32344==    by 0x402075: main (main.c:261)
==32344==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==32344== 
==32344== 
==32344== Process terminating with default action of signal 11 (SIGSEGV)
==32344==  Access not within mapped region at address 0x0
==32344==    at 0x52E79BA: _IO_str_overflow (in /usr/lib64/libc-2.17.so)
==32344==    by 0x52E5FA0: _IO_default_xsputn (in /usr/lib64/libc-2.17.so)
==32344==    by 0x52B6032: vfprintf (in /usr/lib64/libc-2.17.so)
==32344==    by 0x52DA43A: vsprintf (in /usr/lib64/libc-2.17.so)
==32344==    by 0x52BC5D6: sprintf (in /usr/lib64/libc-2.17.so)
==32344==    by 0x401CBD: cmd_filter (main.c:172)
==32344==    by 0x402075: main (main.c:261)
==32344==  If you believe this happened as a result of a stack
==32344==  overflow in your program's main thread (unlikely but
==32344==  possible), you can try to increase the size of the
==32344==  main thread stack using the --main-stacksize= flag.
==32344==  The main thread stack size used in this run was 8388608.
==32344== 
==32344== HEAP SUMMARY:
==32344==     in use at exit: 257 bytes in 2 blocks
==32344==   total heap usage: 2 allocs, 0 frees, 257 bytes allocated
==32344== 
==32344== Searching for pointers to 2 not-freed blocks
==32344== Checked 119,416 bytes
==32344== 
==32344== 25 bytes in 1 blocks are still reachable in loss record 1 of 2
==32344==    at 0x4C29F73: malloc (vg_replace_malloc.c:307)
==32344==    by 0x4E43AF0: ??? (in /usr/lib64/libz.so.1.2.7)
==32344==    by 0x401C9C: cmd_filter (main.c:170)
==32344==    by 0x402075: main (main.c:261)
==32344== 
==32344== 232 bytes in 1 blocks are still reachable in loss record 2 of 2
==32344==    at 0x4C29F73: malloc (vg_replace_malloc.c:307)
==32344==    by 0x4E43A09: ??? (in /usr/lib64/libz.so.1.2.7)
==32344==    by 0x401C9C: cmd_filter (main.c:170)
==32344==    by 0x402075: main (main.c:261)
==32344== 
==32344== LEAK SUMMARY:
==32344==    definitely lost: 0 bytes in 0 blocks
==32344==    indirectly lost: 0 bytes in 0 blocks
==32344==      possibly lost: 0 bytes in 0 blocks
==32344==    still reachable: 257 bytes in 2 blocks
==32344==         suppressed: 0 bytes in 0 blocks
==32344== 
==32344== ERROR SUMMARY: 5 errors from 5 contexts (suppressed: 0 from 0)
==32344== 
==32344== 1 errors in context 1 of 5:
==32344== Invalid write of size 1
==32344==    at 0x52E79BA: _IO_str_overflow (in /usr/lib64/libc-2.17.so)
==32344==    by 0x52E5FA0: _IO_default_xsputn (in /usr/lib64/libc-2.17.so)
==32344==    by 0x52B6032: vfprintf (in /usr/lib64/libc-2.17.so)
==32344==    by 0x52DA43A: vsprintf (in /usr/lib64/libc-2.17.so)
==32344==    by 0x52BC5D6: sprintf (in /usr/lib64/libc-2.17.so)
==32344==    by 0x401CBD: cmd_filter (main.c:172)
==32344==    by 0x402075: main (main.c:261)
==32344==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==32344== 
==32344== 
==32344== 1 errors in context 2 of 5:
==32344== Use of uninitialised value of size 8
==32344==    at 0x52E79BA: _IO_str_overflow (in /usr/lib64/libc-2.17.so)
==32344==    by 0x52E5FA0: _IO_default_xsputn (in /usr/lib64/libc-2.17.so)
==32344==    by 0x52B6032: vfprintf (in /usr/lib64/libc-2.17.so)
==32344==    by 0x52DA43A: vsprintf (in /usr/lib64/libc-2.17.so)
==32344==    by 0x52BC5D6: sprintf (in /usr/lib64/libc-2.17.so)
==32344==    by 0x401CBD: cmd_filter (main.c:172)
==32344==    by 0x402075: main (main.c:261)
==32344==  Uninitialised value was created by a stack allocation
==32344==    at 0x40170A: cmd_filter (main.c:87)
==32344== 
==32344== 
==32344== 1 errors in context 3 of 5:
==32344== Conditional jump or move depends on uninitialised value(s)
==32344==    at 0x52E78F3: _IO_str_overflow (in /usr/lib64/libc-2.17.so)
==32344==    by 0x52E5FA0: _IO_default_xsputn (in /usr/lib64/libc-2.17.so)
==32344==    by 0x52B6032: vfprintf (in /usr/lib64/libc-2.17.so)
==32344==    by 0x52DA43A: vsprintf (in /usr/lib64/libc-2.17.so)
==32344==    by 0x52BC5D6: sprintf (in /usr/lib64/libc-2.17.so)
==32344==    by 0x401CBD: cmd_filter (main.c:172)
==32344==    by 0x402075: main (main.c:261)
==32344==  Uninitialised value was created by a stack allocation
==32344==    at 0x40170A: cmd_filter (main.c:87)
==32344== 
==32344== 
==32344== 1 errors in context 4 of 5:
==32344== Conditional jump or move depends on uninitialised value(s)
==32344==    at 0x52E5FB8: _IO_default_xsputn (in /usr/lib64/libc-2.17.so)
==32344==    by 0x52B6032: vfprintf (in /usr/lib64/libc-2.17.so)
==32344==    by 0x52DA43A: vsprintf (in /usr/lib64/libc-2.17.so)
==32344==    by 0x52BC5D6: sprintf (in /usr/lib64/libc-2.17.so)
==32344==    by 0x401CBD: cmd_filter (main.c:172)
==32344==    by 0x402075: main (main.c:261)
==32344==  Uninitialised value was created by a stack allocation
==32344==    at 0x40170A: cmd_filter (main.c:87)
==32344== 
==32344== 
==32344== 1 errors in context 5 of 5:
==32344== Conditional jump or move depends on uninitialised value(s)
==32344==    at 0x52E7AB4: _IO_str_init_static_internal (in /usr/lib64/libc-2.17.so)
==32344==    by 0x52DA42C: vsprintf (in /usr/lib64/libc-2.17.so)
==32344==    by 0x52BC5D6: sprintf (in /usr/lib64/libc-2.17.so)
==32344==    by 0x401CBD: cmd_filter (main.c:172)
==32344==    by 0x402075: main (main.c:261)
==32344==  Uninitialised value was created by a stack allocation
==32344==    at 0x40170A: cmd_filter (main.c:87)
==32344== 
==32344== ERROR SUMMARY: 5 errors from 5 contexts (suppressed: 0 from 0)
